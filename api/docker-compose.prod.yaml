version: '3.3'
services:
  reverse-proxy:
    image: traefik:v2.2
    command:
            #- "--api.insecure=true"
        #      - "--accesslog=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.websecure.address=:443"
      - "--certificatesresolvers.myresolver.acme.tlschallenge=true"
      - "--certificatesresolvers.myresolver.acme.email=contact@vod-prime.space"
      - "--certificatesresolvers.myresolver.acme.storage=/letsencrypt/acme.json"
        #      - "--log.level=DEBUG"
    ports:
      - "443:443"
      - "8080:8080"
    volumes:
      - "./letsencrypt:/letsencrypt"
  conso-api:
    environment:
      - LOG_LEVEL=info
      - APP_ENV=production
      - SQLALCHEMY_DATABASE_URI=mysql://discoverability:aWuathigh8Ui@ts236797-001.dbaas.ovh.net:35824/discoverability
      - WORKERS_PER_CORE=1
        #    - CACHE_REDIS_URL=redis://redis-cache:6379/0
      - API_ROOT=https://api.vod-prime.space
    labels:
      - "traefik.http.services.conso-api.loadbalancer.server.port=80"
    depends_on:
      - redis-cache
      - auth
  conso-api-legacy:
    environment:
      - LOG_LEVEL=info
      - APP_ENV=production
      - SQLALCHEMY_DATABASE_URI=mysql://discoverability:aWuathigh8Ui@ts236797-001.dbaas.ovh.net:35824/discoverability
      - WORKERS_PER_CORE=1
      - CACHE_REDIS_URL=redis://redis-cache:6379/0
      - API_ROOT=https://experimental-api.vod-prime.space
    labels:
      - "traefik.http.services.conso-api-legacy.loadbalancer.server.port=80"
    depends_on:
      - redis-cache
      - auth
  redis-cache:
    image: redis
  auth:
    image: quay.io/keycloak/keycloak:10.0.1    
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.auth.rule=host(`auth.vod-prime.space`)"
      - "traefik.http.routers.auth.entrypoints=websecure"
      - "traefik.http.services.auth.loadbalancer.server.port=8080"
      - "traefik.http.routers.auth.tls.certresolver=myresolver"
      - "traefik.http.middlewares.corsheader.headers.accesscontrolallowmethods=GET,OPTIONS,PUT,POST"
      - "traefik.http.middlewares.corsheader.headers.accesscontrolalloworiginlist=https://poc-vue.vod-prime.space/*,https://poc-vue.vod-prime.space,https://dev-api.vod-prime.space/*,https://dev-api.vod-prime.space"
      - "traefik.http.middlewares.corsheader.headers.accesscontrolmaxage=100"
      - "traefik.http.middlewares.corsheader.headers.addvaryheader=true"
      - "traefik.http.middlewares.corsheader.headers.customresponseheaders.Access-Control-Allow-Origin=*"
      - "traefik.http.middlewares.corsheader.headers.accessControlAllowCredentials=true"
      - "traefik.http.routers.auth.middlewares=corsheader@docker"
    environment:
      - "PROXY_ADDRESS_FORWARDING=true"
      - JDBC_PARAMS=serverTimezone=UTC
      - DB_VENDOR=mysql
      - DB_ADDR=ts236797-001.dbaas.ovh.net
      - DB_PORT=35824
      - DB_USER=keycloak
      - DB_PASSWORD=78JcVLQa7Uw9pRQ
      - KEYCLOAK_USER=admin
      - KEYCLOAK_PASSWORD=admin
  poc-vue:
    image: discoverability/poc-vue
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.poc-vue.rule=host(`poc-vue.vod-prime.space`)"
      - "traefik.http.routers.poc-vue.tls.certresolver=myresolver"
      - "traefik.http.routers.poc-vue.entrypoints=websecure"
      - "traefik.http.middlewares.poc-vue-cors.headers.customresponseheaders.Access-Control-Allow-Origin=*"
      - "traefik.http.routers.poc-vue.middlewares=poc-vue-cors@docker"
      - "traefik.http.services.poc-vue.loadbalancer.server.port=8081"
    expose:
      - "8081"
    environment:
      - HOST=0.0.0.0
      - PORT=8081
  auth-proxy:
    image: keycloak/keycloak-gatekeeper
    depends_on:
      - auth
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.auth-proxy.tls.certresolver=myresolver"
      - "traefik.http.routers.auth-proxy.rule=host(`experimental-api.vod-prime.space`)"
      - "traefik.http.routers.auth-proxy.entrypoints=websecure"
      - "traefik.http.services.auth-proxy.loadbalancer.server.port=3000"
      - "traefik.http.middlewares.corsheader.headers.accesscontrolallowmethods=GET,OPTIONS,PUT,POST"
      - "traefik.http.middlewares.corsheader.headers.accesscontrolalloworiginlist=https://poc-vue.vod-prime.space/*,https://poc-vue.vod-prime.space,https://dev-api.vod-prime.space/*,https://dev-api.vod-prime.space"
      - "traefik.http.middlewares.corsheader.headers.accesscontrolmaxage=100"
      - "traefik.http.middlewares.corsheader.headers.addvaryheader=true"
      - "traefik.http.middlewares.corsheader.headers.customresponseheaders.Access-Control-Allow-Origin=*"
      - "traefik.http.middlewares.corsheader.headers.accessControlAllowCredentials=true"
      - "traefik.http.routers.auth-proxy.middlewares=corsheader@docker"

    expose:
      - "3000"
    volumes:
      - ./keycloak-gatekeeper.conf:/etc/keycloak-gatekeeper.conf
    entrypoint:
      - /opt/keycloak-gatekeeper
      - --config=/etc/keycloak-gatekeeper.conf
  
  auth-proxy2:
    image: quay.io/oauth2-proxy/oauth2-proxy:latest
    depends_on:
      - auth
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.auth-proxy2.tls.certresolver=myresolver"
      - "traefik.http.routers.auth-proxy2.rule=host(`api.vod-prime.space`)"
      - "traefik.http.routers.auth-proxy2.entrypoints=websecure"
      - "traefik.http.services.auth-proxy2.loadbalancer.server.port=8082"
      - "traefik.http.middlewares.corsheader.headers.accesscontrolallowmethods=GET,OPTIONS,PUT,POST"
      - "traefik.http.middlewares.corsheader.headers.accesscontrolalloworiginlist=https://poc-vue.vod-prime.space/*,https://poc-vue.vod-prime.space,https://dev-api.vod-prime.space/*,https://dev-api.vod-prime.space"
      - "traefik.http.middlewares.corsheader.headers.accesscontrolmaxage=100"
      - "traefik.http.middlewares.corsheader.headers.addvaryheader=true"
      - "traefik.http.middlewares.corsheader.headers.customresponseheaders.Access-Control-Allow-Origin=*"
      - "traefik.http.middlewares.corsheader.headers.accessControlAllowCredentials=true"
      - "traefik.http.routers.auth-proxy2.middlewares=corsheader@docker"
    expose:
      - "8082"
    volumes:
      - ./oauth2-proxy.cfg:/etc/oauth2-proxy.cfg
    entrypoint:
      - /bin/oauth2-proxy
      - --config=/etc/oauth2-proxy.cfg
