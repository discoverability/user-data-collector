# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model_ import Model
from openapi_server import util


class Thumbnail(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, content_id=None, row=None, col=None):  # noqa: E501
        """Thumbnail - a model defined in OpenAPI

        :param content_id: The content_id of this Thumbnail.  # noqa: E501
        :type content_id: str
        :param row: The row of this Thumbnail.  # noqa: E501
        :type row: int
        :param col: The col of this Thumbnail.  # noqa: E501
        :type col: int
        """
        self.openapi_types = {
            'content_id': str,
            'row': int,
            'col': int
        }

        self.attribute_map = {
            'content_id': 'content_id',
            'row': 'row',
            'col': 'col'
        }

        self._content_id = content_id
        self._row = row
        self._col = col

    @classmethod
    def from_dict(cls, dikt) -> 'Thumbnail':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The Thumbnail of this Thumbnail.  # noqa: E501
        :rtype: Thumbnail
        """
        return util.deserialize_model(dikt, cls)

    @property
    def content_id(self):
        """Gets the content_id of this Thumbnail.


        :return: The content_id of this Thumbnail.
        :rtype: str
        """
        return self._content_id

    @content_id.setter
    def content_id(self, content_id):
        """Sets the content_id of this Thumbnail.


        :param content_id: The content_id of this Thumbnail.
        :type content_id: str
        """

        self._content_id = content_id

    @property
    def row(self):
        """Gets the row of this Thumbnail.


        :return: The row of this Thumbnail.
        :rtype: int
        """
        return self._row

    @row.setter
    def row(self, row):
        """Sets the row of this Thumbnail.


        :param row: The row of this Thumbnail.
        :type row: int
        """

        self._row = row

    @property
    def col(self):
        """Gets the col of this Thumbnail.


        :return: The col of this Thumbnail.
        :rtype: int
        """
        return self._col

    @col.setter
    def col(self, col):
        """Sets the col of this Thumbnail.


        :param col: The col of this Thumbnail.
        :type col: int
        """

        self._col = col
